name: Release Builds

on: push

env:
  SME_DEPS_VERSION: "2024.04.18"
  SME_VERSION: "1.6.0"
  CIBUILDWHEEL_VERSION: 2.17
  CIBW_BUILD_VERBOSITY: 3
  CIBW_SKIP: 'pp*-*'
  INSTALL_PREFIX: "/opt/smelibs"
  SUDOCMD: "sudo -E"
  MACOSX_DEPLOYMENT_TARGET: "11"
  OS_TARGET: "osx-arm64"

jobs:
  build:
    name: MacOS Arm64 sme GUI/CLI
    env:
      MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
      MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      MACOS_CERTIFICATE_NAME: ${{ secrets.MACOS_CERTIFICATE_NAME }}
      MACOS_NOTARIZATION_APPLE_ID: ${{ secrets.MACOS_NOTARIZATION_APPLE_ID }}
      MACOS_NOTARIZATION_TEAM_ID: ${{ secrets.MACOS_NOTARIZATION_TEAM_ID }}
      MACOS_NOTARIZATION_PWD: ${{ secrets.MACOS_NOTARIZATION_PWD }}
      MACOS_KEYCHAIN_PWD: ${{ secrets.MACOS_KEYCHAIN_PWD }}
    runs-on: macos-arm64-ssc
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: "/Users/runner/Library/Caches/ccache"
          key: ccache-${{ github.job }}-${{ runner.os }}-${{ github.sha }}
          restore-keys: ccache-${{ github.job }}-${{ runner.os }}-
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "15.3"
      - run: ./init.sh
      - run: ./build.sh
      - uses: actions/upload-artifact@v4
        with:
          name: artifacts-macos-arm64-gui
          path: ./artefacts/*
  wheel:
    name: MacOS Arm64 sme Wheels
    runs-on: macos-arm64-ssc
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: "/Users/runner/Library/Caches/ccache"
          key: ccache-${{ github.job }}-${{ runner.os }}-${{ github.sha }}
          restore-keys: ccache-${{ github.job }}-${{ runner.os }}-
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "15.3"
      - run: ./init.sh
      - run: ./wheels.sh
      - uses: actions/upload-artifact@v4
        with:
          name: artifacts-macos-arm64-wheel
          path: ./spatial-model-editor/wheelhouse/*.whl

  release:
    needs: [build, wheel]
    if: github.repository == 'ssciwr/sme-osx-arm64' && github.event_name == 'push' && (startsWith(github.event.ref, 'refs/tags/') || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: artifacts-*
          merge-multiple: true
          path: binaries
      - run: mkdir dist && mv binaries/*.whl dist/.
      - name: Upload binaries to latest pre-release
        # if this is an untagged commit to main: upload binaries to github latest release
        if: github.ref == 'refs/heads/main'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: binaries/*
          tag: latest
          overwrite: true
          file_glob: true
          prerelease: true
      - name: Upload binaries to tagged release
        # if this a tagged commit, upload binaries to github release for this tag
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: binaries/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
      - name: Publish package distributions to PyPI
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true